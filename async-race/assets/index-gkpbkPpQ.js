(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(r){if(r.ep)return;r.ep=!0;const n=t(r);fetch(r.href,n)}})();class b{children=[];_subscriptions=[];get node(){return this._element}addClasses(e){e&&e.length>0&&this._element.classList.add(...e)}removeClasses(e){e&&e.length>0&&this._element.classList.remove(...e)}toggleClass(e){e&&this._element.classList.toggle(e)}setAttributes(e){if(e)for(const[t,s]of Object.entries(e))s&&this._element.setAttribute(t,s)}getAttribute(e){return this._element.getAttribute(e)}removeAttribute(e){this._element.removeAttribute(e)}appendChildren(...e){for(const t of e)t instanceof b?(this._element.append(t.node),this.children=[...this.children,t]):t instanceof Node&&this._element.append(t)}deleteChildren(){for(this.children.map(e=>{e.deleteElement()}),this.children=[];this._element.firstChild;)this._element.firstChild.remove()}deleteElement(){this.deleteChildren(),this.unsubscribeAll(),this._element.remove()}sub(...e){e.forEach(t=>{this._subscriptions.push(t)})}unsubscribeAll(){this._subscriptions.forEach(e=>{e()})}addListener(e,t,s=!1){this._element.addEventListener(e,t,s)}removeListener(e,t,s=!1){this._element.removeEventListener(e,t,s)}dispatchEvent(e,t){const s=new CustomEvent(e,{detail:t});this._element.dispatchEvent(s)}}class a extends b{_element;constructor(e){super(),this._element=document.createElement(e.tag),e&&(this.addClasses(e.classNames),this.setText(e.text),this.setAttributes(e.attributes))}setText(e){e&&(this._element.textContent=e)}}const S="_button_1z0wj_1",R={button:S};class c extends a{constructor(e){super({tag:"button",classNames:[...e.classNames??[],R.button],text:e.text}),this.addListener("click",e.callback)}disable(){this.setAttributes({disabled:"true"})}enable(){this.removeAttribute("disabled")}setDisabled(e){e?this.disable():this.enable()}}class T extends a{outlet;garage;winners;constructor(e,t,s){super({tag:"nav"}),this.outlet=e,this.garage=t,this.winners=s,this.renderButtons()}renderButtons(){const e=new c({text:"Garage",callback:()=>{this.outlet.node.replaceChild(this.garage.node,this.winners.node),e.setAttributes({disabled:"true"}),t.removeAttribute("disabled")}});e.setAttributes({disabled:"true"});const t=new c({text:"Winners",callback:()=>{this.outlet.node.replaceChild(this.winners.node,this.garage.node),t.setAttributes({disabled:"true"}),e.removeAttribute("disabled")}});this.appendChildren(e,t)}}class m extends a{constructor(e){super({tag:"input"}),this.setType(e.type)}get value(){return this._element.value}set value(e){this._element.value=e}disable(){this._element.setAttribute("disabled","true")}enable(){this._element.removeAttribute("disabled")}setType(e){this._element.setAttribute("type",e)}}class x extends a{options;textInput;colorInput;constructor(e){super({tag:"form"}),this.options=e,this.textInput=new m({type:"text"}),this.colorInput=new m({type:"color"}),this.render()}disable(){this.children.forEach(e=>{(e instanceof c||e instanceof m)&&e.disable()})}enable(){this.children.forEach(e=>{(e instanceof c||e instanceof m)&&e.enable()})}render(){const e=new c({text:this.options.buttonText,callback:t=>{t.preventDefault(),this.options.callback(this.textInput.value,this.colorInput.value).catch(s=>{console.error("Error in callback:",s)})}});this.appendChildren(this.textInput,this.colorInput,e)}}class y extends b{_element;constructor(e){super(),this._element=document.createElementNS("http://www.w3.org/2000/svg","svg"),e.classNames&&this.addClasses(e.classNames),this.setAttributes(e.attributes);const t=document.createElementNS("http://www.w3.org/2000/svg","use");t.setAttribute("href",e.href),this.appendChildren(t)}}const W="_card_1mqry_1",k="_select_1mqry_10",F="_title_1mqry_18",N="_start_1mqry_23",M="_reset_1mqry_27",U="_car_1mqry_1",I="_flag_1mqry_36",d={card:W,select:k,delete:"_delete_1mqry_14",title:F,start:N,reset:M,car:U,flag:I};class C extends a{car;id;buttons;startButton;backButton;name;color;carImage;constructor(e,t,s){super({tag:"div",classNames:[d.card]}),this.id=e,this.name=t,this.color=s,this.car=new a({tag:"div",classNames:[d.car]}),this.carImage=new y({href:"/sprite.svg#auto",attributes:{width:"100",height:"50"}}),this.buttons=[],this.startButton=new c({classNames:[d.start],text:"Start",callback:()=>{const r=new CustomEvent("carMoveStarted",{detail:{id:this.id},bubbles:!0});this.backButton.enable(),this.startButton.disable(),this.node.dispatchEvent(r)}}),this.backButton=new c({classNames:[d.reset],text:"B",callback:()=>{const r=new CustomEvent("carMoveReset",{detail:{id:this.id},bubbles:!0});this.startButton.enable(),this.backButton.disable(),this.node.dispatchEvent(r)}}),this.backButton.disable(),this.render()}changeCarColor(e){this.carImage.node.setAttribute("fill",e)}render(){const e=new a({tag:"h3",text:this.name,classNames:[d.title]});this.changeCarColor(this.color);const t=new c({text:"Select",classNames:[d.select],callback:()=>{const n=new CustomEvent("carSelected",{detail:{id:this.id,name:this.name,color:this.color},bubbles:!0});this.node.dispatchEvent(n)}});this.car.appendChildren(this.carImage);const s=new c({text:"Remove",classNames:[d.delete],callback:()=>{const n=new CustomEvent("carRemoved",{detail:{id:this.id},bubbles:!0});this.node.dispatchEvent(n)}}),r=new y({classNames:[d.flag],href:"/sprite.svg#flag",attributes:{width:"40",height:"40"}});this.buttons.push(t,s,this.startButton,this.backButton),this.appendChildren(t,s,e,this.startButton,this.backButton,this.car,r)}}class v{static BASE_URL="http://localhost:3000/engine";static async startEngine(e){const t=await fetch(`${this.BASE_URL}?id=${e}&status=started`,{method:"PATCH"});if(!t.ok)throw new Error("Failed to start engine");return t.json()}static async stopEngine(e){if(!(await fetch(`${this.BASE_URL}?id=${e}&status=stopped`,{method:"PATCH"})).ok)throw new Error("Failed to stop engine")}static async drive(e){const t=await fetch(`${this.BASE_URL}?id=${e}&status=drive`,{method:"PATCH"});if(!t.ok)throw t.status===500?new Error("Engine failure"):new Error("Failed to drive");return t.json()}}class w{static animationFrameIds=new Map;static isAnimating=new Map;static isEngineRunning=new Map;static stopAnimation(e){this.isAnimating.set(e,!1),this.animationFrameIds.has(e)&&(cancelAnimationFrame(this.animationFrameIds.get(e)),this.animationFrameIds.delete(e))}static resetCarPosition(e,t){this.isAnimating.set(e,!1),this.isEngineRunning.set(e,!1),t.style.transform="translateX(0px)"}static async moveCar(e,t){const s=await v.startEngine(e.id);if(typeof s!="object"||s===null||!("distance"in s)||!("velocity"in s)||typeof s.distance!="number"||typeof s.velocity!="number")throw new Error("Invalid response from engine service");const r=t/s.velocity;return this.isAnimating.set(e.id,!0),this.isEngineRunning.set(e.id,!0),await Promise.all([this.animateCar(e.id,e.element,r,t),this.monitorDriveStatus(e.id)]),r}static async startRace(e){const t=e.map(({id:r,element:n})=>{const o=n.parentElement.clientWidth-n.offsetWidth;return this.moveCar({id:r,element:n},o).then(h=>({id:r,time:h})).catch(()=>null)});return await Promise.race(t)}static resetAll(e){e.forEach(({id:t,element:s})=>{this.resetCarPosition(t,s)})}static async monitorDriveStatus(e){try{try{await v.drive(e)}catch(t){for(;this.isAnimating.get(e);){if(t instanceof Error&&t.message==="Engine failure"){this.stopAnimation(e),await v.stopEngine(e);break}if(t instanceof Error&&t.message.includes("Failed to drive"))break}await new Promise(s=>setTimeout(s,500))}}catch(t){console.error(` Unexpected error for car ${e}:`,t)}}static async animateCar(e,t,s,r){const n=performance.now();return new Promise(o=>{const h=g=>{if(!this.isAnimating.get(e))return;const A=(g-n)/1e3,_=Math.min(A/s,1);if(t.style.transform=`translateX(${_*r}px)`,_<1){const $=requestAnimationFrame(h);this.animationFrameIds.set(e,$)}else this.isAnimating.set(e,!1),this.isEngineRunning.set(e,!1),o()},u=requestAnimationFrame(h);this.animationFrameIds.set(e,u)})}}function O(i){return typeof i=="object"&&i!==null&&"id"in i&&typeof i.id=="number"&&"name"in i&&typeof i.name=="string"&&"color"in i&&typeof i.color=="string"}function E(i){return typeof i=="object"&&i!==null&&"id"in i&&typeof i.id=="number"}const H="_modal_1atks_1",j={modal:H};class q extends a{constructor(e,t){super({tag:"div"}),this.addClasses([j.modal]),this.setText(`${e} is the winner! Time: ${t.toFixed(2)}s`),globalThis.addEventListener("click",s=>{s.target!==this.node&&this.deleteElement()})}}class l{static BASE_URL="http://localhost:3000";static getCar(e){return fetch(`${this.BASE_URL}/garage/${e}`).then(t=>t.ok?t.json():null)}static async getCars(e,t=7){const s=await fetch(`${this.BASE_URL}/garage?_page=${e}&_limit=${t}`);if(!s.ok)throw new Error("Failed to fetch cars");const r=await s.json(),n=Number(s.headers.get("X-Total-Count"))||0;return{cars:r,total:n}}static async createCar(e,t){await fetch(`${this.BASE_URL}/garage`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e,color:t})})}static async deleteCar(e){await fetch(`${this.BASE_URL}/garage/${e}`,{method:"DELETE"})}static async updateCar(e){await fetch(`${this.BASE_URL}/garage/${e.id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:e.name,color:e.color})})}static async getWinners(e,t=10,s,r){const n=new URLSearchParams({_page:String(e),_limit:String(t)});s&&n.set("_sort",s),r&&n.set("_order",r);const o=await fetch(`${this.BASE_URL}/winners?${n.toString()}`);if(!o.ok)throw new Error("Failed to fetch winners");const h=await o.json(),u=Math.max(Number(o.headers.get("X-Total-Count"))||0,h.length);return{items:h,total:u}}static async getWinner(e){const t=await fetch(`${this.BASE_URL}/winners/${e}`);return t.ok?t.json():null}static async createWinner(e){await fetch(`${this.BASE_URL}/winners`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})}static async updateWinner(e,t){await fetch(`${this.BASE_URL}/winners/${e}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})}static async deleteWinner(e){await fetch(`${this.BASE_URL}/winners/${e}`,{method:"DELETE"})}}class D extends a{raceButton;resetButton;generateButton;constructor(e){super({tag:"div"}),this.raceButton=new c({text:"Race",callback:e.onRace}),this.resetButton=new c({text:"Reset",callback:e.onReset}),this.resetButton.disable(),this.generateButton=new c({text:"Generate cars",callback:e.onGenerate}),this.appendChildren(this.raceButton,this.resetButton,this.generateButton)}disable(){this.raceButton.disable(),this.generateButton.disable(),this.resetButton.disable()}enable(){this.raceButton.enable(),this.generateButton.enable(),this.resetButton.enable()}setResetEnabled(e){e?this.resetButton.enable():this.resetButton.disable()}}class G extends a{selectedCarId=null;outlet;title;pageNumber;store;carListContainer;createForm;updateForm;controls;activeCars=new Set;constructor(e,t){super({tag:"div"}),this.store=e,this.outlet=t,this.title=new a({tag:"h1",text:"Garage (0)"}),this.pageNumber=new a({tag:"h2",text:"Page #1"}),this.carListContainer=new a({tag:"div"}),this.store.total$.subscribe(s=>{this.title.setText(`Garage (${s})`)}),this.controls=new D({onRace:()=>{this.startRace()},onReset:()=>this.resetAll(),onGenerate:()=>{this.store.generateRandomCars()}}),this.createForm=this.renderCreateForm(),this.updateForm=this.renderUpdateForm(),this.render(),this.bindStore()}handleSelectCar(e){this.selectedCarId=e,this.controls.disable()}render(){this.updateForm.disable();const e=this.renderPagination();this.appendChildren(this.createForm,this.updateForm,this.controls,this.title,this.pageNumber,this.carListContainer,e)}renderCreateForm(){return new x({buttonText:"Create",callback:async(e,t)=>{try{await this.store.addCar(e,t)}catch(s){console.error("Error while adding car:",s)}}})}renderUpdateForm(){return new x({buttonText:"Update",callback:async(e,t)=>{if(this.selectedCarId===null){console.error("No car selected!");return}try{await this.store.updateCar({id:this.selectedCarId,name:e,color:t}),this.updateForm.disable(),this.createForm.enable(),this.selectedCarId=null,this.controls.enable()}catch(s){console.error("Error while updating car:",s)}}})}async startRace(){this.updateForm.disable(),this.createForm.disable(),this.controls.disable(),this.controls.setResetEnabled(!0);const e=[];for(const t of this.carListContainer.children)t instanceof C&&t.car.node instanceof HTMLElement&&(t.buttons.forEach(s=>s.disable()),e.push({id:t.id,element:t.car.node}));try{const t=await w.startRace(e);if(t){const s=await l.getCar(t.id);s&&(await this.store.addWinner(t.id,t.time),this.outlet.appendChildren(new q(s.name,t.time)))}}catch(t){console.error("Race error:",t)}}resetAll(){this.controls.enable(),this.controls.setResetEnabled(!0);const e=[];for(const t of this.carListContainer.children)t instanceof C&&t.car.node instanceof HTMLElement&&(t.buttons.forEach(s=>{s!==t.backButton&&s.enable()}),e.push({id:t.id,element:t.car.node}));w.resetAll(e),this.activeCars.clear(),this.controls.setResetEnabled(!1)}renderPagination(){const e=new a({tag:"div"}),t=new c({text:"Prev",callback:()=>{this.store.previous("garage").catch(r=>{console.error("Error going to the previous page:",r)})}}),s=new c({text:"Next",callback:()=>{this.store.next("garage").catch(r=>{console.error("Error going to the next page:",r)})}});return this.store.cars$.subscribe(()=>{const r=this.store.getCurrentPage("garage"),n=this.store.total$.value,o=Math.ceil(n/this.store.pageLimits.garage);r===1?t.disable():t.enable(),r===o?s.disable():s.enable()}),e.appendChildren(t,s),e}bindStore(){this.store.cars$.subscribe(e=>this.renderCarList(e)),this.store.total$.subscribe(e=>{this.pageNumber.setText(`Page #${this.store.getCurrentPage("garage")} / Total cars: ${e}`)}),this.store.loadCars(this.store.getCurrentPage("garage")).catch(e=>{console.error("Error loading cars:",e)})}renderCarList(e){this.carListContainer.deleteChildren(),e.forEach(t=>{const s=new C(t.id,t.name,t.color);s.addListener("carSelected",r=>{r instanceof CustomEvent&&O(r.detail)&&(this.createForm.disable(),this.updateForm.enable(),this.handleSelectCar(r.detail.id))}),s.addListener("carRemoved",r=>{(async()=>{if(r instanceof CustomEvent&&E(r.detail)){const n=r.detail.id;try{await this.store.removeCar(n)}catch(o){console.error("Error while removing car:",o)}}})()}),s.addListener("carMoveStarted",r=>{(async()=>{if(r instanceof CustomEvent&&E(r.detail)){const n=r.detail.id;this.activeCars.add(n),this.controls.setResetEnabled(!0);try{const o=s.car.node;o instanceof HTMLElement?await w.moveCar({id:n,element:o},this.outlet.node.clientWidth-o.offsetWidth):console.error("Car element is not a valid HTMLElement.")}catch(o){console.error("Error while starting car:",o)}}})()}),s.addListener("carMoveReset",r=>{(()=>{if(r instanceof CustomEvent&&E(r.detail)){const n=r.detail.id;s.car.node instanceof HTMLElement&&w.resetCarPosition(n,s.car.node),this.activeCars.delete(n),this.activeCars.size===0&&this.controls.setResetEnabled(!1)}})()}),this.carListContainer.appendChildren(s)})}}class X extends a{constructor(e){super({tag:"div"}),this.store=e,this.render(),this.store.winners$.subscribe(t=>{this.renderWinners(t)}),this.store.winnersCount$.subscribe(()=>{this.updateButtons()}),this.store.loadWinners(this.store.getCurrentPage("winners"),this.store.pageLimits.winners)}title=new a({tag:"h1",text:"Winners (0)"});pageNumber=new a({tag:"h2",text:"Page #1"});tableBody=new a({tag:"tbody"});headerWins=new a({tag:"th"});headerBestTime=new a({tag:"th"});previousButton=new c({text:"Prev",callback:()=>{this.handlePageChange(-1)}});nextButton=new c({text:"Next",callback:()=>{this.handlePageChange(1)}});sortKey="time";sortOrder="asc";updateButtons(){const e=this.store.getCurrentPage("winners"),t=this.store.pageLimits.winners,s=this.store.winnersCount$.value,r=Math.ceil(s/t);this.previousButton.setDisabled(e===1),this.nextButton.setDisabled(e>=r)}render(){const e=new a({tag:"table"}),t=new a({tag:"thead"}),s=new a({tag:"tr"}),r=new a({tag:"th",text:"№"}),n=new a({tag:"th",text:"ID"}),o=new a({tag:"th",text:"Car"}),h=new a({tag:"th",text:"Name"});this.headerWins.node.style.cursor="pointer",this.headerWins.addListener("click",()=>void this.toggleSort("wins")),this.headerBestTime.node.style.cursor="pointer",this.headerBestTime.addListener("click",()=>void this.toggleSort("time")),s.appendChildren(r,n,o,h,this.headerWins,this.headerBestTime),t.appendChildren(s),e.appendChildren(t,this.tableBody),this.appendChildren(this.title,this.pageNumber,e),this.updateHeaders(),this.renderControls()}async toggleSort(e){this.sortKey===e?this.sortOrder=this.sortOrder==="desc"?"asc":"desc":(this.sortKey=e,this.sortOrder="desc"),this.updateHeaders(),await this.renderWinners(this.store.getWinners())}async renderWinners(e){this.tableBody.deleteChildren();const t=[...e];if(this.sortKey&&this.sortOrder){const r=this.sortKey,n=r==="wins"?"time":"wins";t.sort((o,h)=>{const u=o[r]-h[r],g=o[n]-h[n];return u===0?this.sortOrder==="asc"?g:-g:this.sortOrder==="asc"?u:-u})}this.title.setText(`Winners (${t.length})`);let s=(this.store.getCurrentPage("winners")-1)*this.store.pageLimits.winners+1;for(const r of t){const n=new a({tag:"tr"});n.appendChildren(new a({tag:"td",text:(s++).toString()}),new a({tag:"td",text:`${r.id}`}));try{const o=await l.getCar(r.id);n.appendChildren(new y({href:"/sprite.svg#auto",attributes:{width:"40",height:"40",fill:o?.color||"#000000"}}),new a({tag:"td",text:o?.name||"Unknown"}),new a({tag:"td",text:`${r.wins}`}),new a({tag:"td",text:`${r.time.toFixed(2)}`}))}catch(o){console.error(`Error loading car ${r.id}`,o)}this.tableBody.appendChildren(n)}}getHeaderText(e,t){return this.sortKey===e?`${t} ${this.sortOrder==="asc"?"↑":"↓"}`:t}updateHeaders(){this.headerWins.setText(this.getHeaderText("wins","Wins")),this.headerBestTime.setText(this.getHeaderText("time","Best Time (seconds)"))}renderControls(){this.appendChildren(this.previousButton,this.nextButton),this.updateButtons()}async handlePageChange(e){const s=this.store.getCurrentPage("winners")+e;s>=1&&(await this.store[e>0?"next":"previous"]("winners"),this.pageNumber.setText(`Page #${s}`))}}class K{listeners=new Set;emit(e){for(const t of this.listeners)t(e)}subscribe(e){return this.listeners.add(e),this.unsubscribe.bind(this,e)}unsubscribe(e){this.listeners.delete(e)}}class p extends K{constructor(e){super(),this._value=e}get value(){return this._value}set(e){this._value=e,this.emit(this._value)}update(e){this._value=e(this._value),this.emit(this._value)}silentUpdate(e){this._value=e(this._value)}}const J=16777215,z=()=>`#${Math.floor(Math.random()*J).toString(16)}`,B=i=>i[Math.floor(Math.random()*i.length)];class L{cars$=new p([]);total$=new p(0);winners$=new p([]);winnersCount$=new p(0);pageLimits={garage:7,winners:10};currentPage={garage:1,winners:1};pageLoaders={garage:this.loadCars.bind(this),winners:this.loadWinners.bind(this)};async next(e){const t=this.currentPage[e]+1;this.currentPage[e]=t,await this.pageLoaders[e](t,this.pageLimits[e])}async previous(e){const t=Math.max(1,this.currentPage[e]-1);this.currentPage[e]=t,await this.pageLoaders[e](t,this.pageLimits[e])}getCurrentPage(e){return this.currentPage[e]}async addCar(e,t){try{await l.createCar(e,t),await this.loadCars(this.currentPage.garage)}catch(s){this.handleError(s,"Failed to add car")}}async removeCar(e){try{await l.deleteCar(e),await l.deleteWinner(e),await this.loadCars(this.currentPage.garage),await this.loadWinners(this.currentPage.winners,this.pageLimits.winners)}catch(t){this.handleError(t,"Error deleting car")}}async updateCar(e){try{await l.updateCar(e),await this.loadCars(this.currentPage.garage);const t=await l.getWinner(e.id);t&&(await l.updateWinner(e.id,{wins:t.wins,time:t.time}),await this.loadWinners(this.currentPage.winners,this.pageLimits.winners))}catch(t){this.handleError(t,"Error updating car")}}async loadWinners(e,t){try{const{items:s,total:r}=await l.getWinners(e,t);this.winners$.set(s),this.winnersCount$.set(r),this.currentPage.winners=e}catch(s){this.handleError(s,"Error loading winners")}}async loadCars(e){try{const{cars:t,total:s}=await l.getCars(e);this.cars$.set(t),this.total$.set(s),this.currentPage.garage=e}catch(t){this.handleError(t,"Error loading cars")}}async addWinner(e,t){try{const s=await l.getWinner(e);await(s?l.updateWinner(e,{time:Math.min(s.time,t),wins:s.wins+1}):l.createWinner({id:e,wins:1,time:t})),await this.loadWinners(this.currentPage.winners,this.pageLimits.winners)}catch(s){this.handleError(s,"Error adding/updating winner")}}getWinners(){return[...this.winners$.value]}async generateRandomCars(){const e=["Ford","BMW","Audi","Mercedes","Tesla","Toyota","Honda","Nissan","Lexus","Porsche"],t=["X1","X3","X5","A4","A6","C-Class","E-Class","Model S","Model 3","Camry","Civic","Altima","RX","911","Macan"],s=Array.from({length:100},()=>{const r=`${B(e)} ${B(t)}`,n=z();return l.createCar(r,n)});try{await Promise.all(s),await this.loadCars(this.currentPage.garage)}catch(r){r instanceof Error?console.error("Error generating cars:",r.message):console.error("Unknown error:",r)}}handleError(e,t){e instanceof Error?console.error(`${t}:`,e.message):console.error(`${t}: Unknown error`,e)}}const f=new a({tag:"div"});document.body.append(f.node);const P=new G(new L,f),V=new X(new L),Q=new T(f,P,V);f.appendChildren(Q,P);
