import{B as r,b as m}from"./button-DSwA1G1O.js";import{B as c,o as l,S as f,g as O}from"./index-BX1IQno_.js";import{I as w,T as L}from"./input-BcyWsxIj.js";const k="_options_1aopn_1",g={options:k},v="_option_26su7_1",x={option:v};class _ extends c{constructor(t){super({tag:"li",classNames:[x.option]}),this.render(t)}render(t){const a=new c({tag:"span",classNames:[x.id],text:`#${t.id.toString()}`}),e=new w({type:"text",name:"title",attributes:{placeholder:"Title"},id:t.id.toString()});e.setValue(t.title);const n=i=>h=>{l.updateOption(t.id,{[i]:h})};e.addListener("input",()=>{const i=e.getValue();t.title!==i&&n("title")(i)});const o=new w({type:"number",name:"weight",attributes:{placeholder:"Weight",min:"0"}});t.weight!==void 0&&o.setValue(t.weight.toString()),o.addListener("input",()=>{const i=o.getValue()===void 0||o.getValue()===""?"":Number(o.getValue());t.weight!==i&&n("weight")(i)});const d=new r({text:"Delete",callback:()=>{this.deleteElement(),l.removeOption(t.id)}});this.appendChildren(a,e,o,d)}}const S="_modal_1cx89_5",E="_container_1cx89_12",B="_form_1cx89_22",A="_warning_1cx89_28",I="_button_1cx89_43",V="_textarea_1cx89_57",p={modal:S,container:E,form:B,warning:A,button:I,"modal-button":"_modal-button_1cx89_48","buttons-container":"_buttons-container_1cx89_52",textarea:V};class C extends c{blockScroll;unblockScroll;constructor(){super({tag:"dialog",classNames:[p.modal]}),this.blockScroll=()=>{document.body.classList.add("no-scroll")},this.unblockScroll=()=>{document.body.classList.remove("no-scroll")},this.addListener("click",t=>{t.target===this.node&&this.close()}),this.addListener("keydown",t=>{t.key==="Escape"&&this.close()})}open(){document.body.append(this.node),this.blockScroll(),this.node.showModal()}close(){this.node.close(),this.unblockScroll(),this.deleteElement()}render(){const t=new c({tag:"div",classNames:[p.container]});return this.appendChildren(t),t}}const T=`Paste a list of new options in a CSV-like format:

title,1                 -> | title                 | 1 |
title with whitespace,2 -> | title with whitespace | 2 |
title , with , commas,3 -> | title , with , commas | 3 |
title with &quot;quotes&quot;,4   -> | title with &quot;quotes&quot;   | 4 |`,R=`Please add at least 2 valid options.

An option is considered valid if its title is not empty and its weight is greater than 0.`;class j extends C{constructor(){super(),this.renderContent()}renderContent(){const t=new c({tag:"p",text:R,classNames:[p.warning]}),a=new r({classNames:[p.button],text:"Close",callback:()=>{this.close()}});this.render().appendChildren(t,a)}}function P(s){return s.split(`
`)}function q(s){return s.map(e=>{const n=e.lastIndexOf(",");return n===-1?[e]:[e.slice(0,n),e.slice(n+1)]}).filter(e=>M(e)).map(([e,n])=>[e.trim(),Number(n.trim())]).filter(([e,n])=>typeof n=="number"&&!Number.isNaN(n)&&n>0?e&&n%1===0:!1)}function M(s){return s.length===2}function F(s=[]){for(const[t,a]of s)l.addOption({title:t,weight:a})}class U extends C{constructor(){super(),this.renderContent()}renderContent(){const t=new c({tag:"form",classNames:[p.form]});this.render().appendChildren(t);const e=new c({tag:"textarea",classNames:[p.textarea],attributes:{rows:"12",cols:"64",name:"table",placeholder:T}}),n=new c({tag:"div",classNames:[p["buttons-container"]]}),o=new r({text:"Cancel",callback:i=>{i.preventDefault(),this.close()},classNames:[p["modal-button"]]}),d=new r({text:"Confirm",callback:i=>{this.onConfirm(i,e.node.value)},classNames:[p["modal-button"]]});n.appendChildren(o,d),t.appendChildren(e,n)}onConfirm(t,a){t.preventDefault(),this.close();const e=P(a);if(e.length===0)return;const n=q(e);n.length!==0&&F(n)}}function W(s,t){const a=JSON.stringify(s,null,2),e=new Blob([a],{type:"application/json"}),n=URL.createObjectURL(e),o=document.createElement("a");o.href=n,o.download=t,document.body.append(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(n)}function J(s){const t=document.createElement("input");t.type="file",t.accept="application/json",t.addEventListener("change",a=>{const e=a.target;if(!e.files||e.files.length===0)return;e.files[0].text().then(o=>{try{const d=JSON.parse(o);s(d)}catch(d){console.error("Error loading JSON:",d)}}).catch(o=>{console.error("Error reading file:",o)})}),t.click()}class z extends c{constructor(){super({tag:"main",classNames:[g.optionsPage]});const t=new c({tag:"ul",classNames:[g.options]}),a=f.load("optionsCleared");l.value.length===0&&!a&&l.addOption({title:""});const e=l.value;e.length>0&&e.forEach(u=>{const b=new _(u);t.appendChildren(b)});const n=new r({text:"Add Option",callback:()=>{l.addOption({title:""})},classNames:[m["control-button"]]});this.sub(l.subscribe(u=>{t.deleteChildren(),u.forEach(b=>{const y=new _(b);t.appendChildren(y)})}));const o=new r({text:"Paste List",callback:()=>{new U().open()},classNames:[m["control-button"]]}),d=new r({text:"Clear List",callback:()=>{f.save("optionsCleared",!0),t.deleteChildren(),l.reset()},classNames:[m["control-button"]]}),i=new r({text:"Save List to File",callback:()=>{const u=l.value;W(u,"options.json")},classNames:[m["control-button"]]}),h=new r({text:"Load List from File",callback:()=>{J(u=>{l.set(u)})},classNames:[m["control-button"]]}),N=new r({text:"Start",callback:()=>{O(l.value)?(globalThis.location.hash="/wheel",this.unsubscribeAll()):new j().open()},classNames:[m["control-button"]]});this.appendChildren(new L,t,n,o,d,i,h,N)}}export{z as OptionsPage};
